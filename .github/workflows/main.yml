name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: pytest tests.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
      
    
    - name: Checkout source code
      uses: actions/checkout@v2
      
    - name: Upload build Artifact    
      uses: actions/upload-artifact@v2.3.1
      with:
        name: deployment
        path: ${{ github.workspace }}
    
    - name: Generate deployment package
      run: zip -r deployment.zip . -x '*.git*'
    
    - name: Get Version Number
      id: version
      uses: nanzm/get-time-action@v1.1
      with:
        timeZone: 0
        format: 'YYYY-MM-DD-HH-mm-ss'
      
                  
    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v19
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: Myinstapp2
        environment_name: Myinstapp2-env
        version_label: ${{ github.run_id }}
        region: us-east-1
        deployment_package: deployment.zip
